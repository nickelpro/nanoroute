name: Build and Test

on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  build_windows:
    name: Build and Test on Windows
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml

      - name: Setup Developer Prompt
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build and Test
        env:
          CIBW_BUILD: "*win_amd64"
          CIBW_SKIP: "cp*t*"
          CIBW_BUILD_FRONTEND: build
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}"
        uses: pypa/cibuildwheel@v3.2

  build_macos:
    name: Build and Test on MacOS
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Xcode Switch
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml

      - name: Build and Test
        env:
          MACOSX_DEPLOYMENT_TARGET: 13.3
          ARCHFLAGS: "-arch arm64"
          CIBW_BUILD_FRONTEND: build
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}"
        uses: pypa/cibuildwheel@v3.2

  build_linux:
    name: Build and Test on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build and Test
        env:
          CIBW_BUILD: "*manylinux*"
          CIBW_BUILD_FRONTEND: build
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}"
        uses: pypa/cibuildwheel@v3.2

  build_docs:
    name: Build Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml

      - name: Build Docs
        run: |
          pip install --group docs
          sphinx-build docs _build
